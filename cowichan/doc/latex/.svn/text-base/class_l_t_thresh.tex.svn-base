\hypertarget{class_l_t_thresh}{
\section{LTThresh Class Reference}
\label{class_l_t_thresh}\index{LTThresh@{LTThresh}}
}
{\tt \#include $<$thresh.hpp$>$}

Inheritance diagram for LTThresh::\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=2cm]{class_l_t_thresh}
\end{center}
\end{figure}
\subsection*{Protected Member Functions}
\begin{CompactItemize}
\item 
void \hyperlink{class_l_t_thresh_b802b240b17b2c71cb758e1fe7585d72}{consumeInput} ()
\item 
void \hyperlink{class_l_t_thresh_3cff6d04c7389a32e1dca924c7f93e23}{work} ()
\item 
void \hyperlink{class_l_t_thresh_41ce024f24320a5bd65239e98ac85587}{produceOutput} ()
\end{CompactItemize}
\subsection*{Static Protected Attributes}
\begin{CompactItemize}
\item 
static const char $\ast$ \hyperlink{class_l_t_thresh_2d17b2a1fe255b7d7beaf65d474ef8c0}{REQUEST} = \char`\"{}thresh request\char`\"{}
\item 
static const char $\ast$ \hyperlink{class_l_t_thresh_f249bcd9d3da75f2fb16e2b38451c0c6}{POINT} = \char`\"{}thresh point\char`\"{}
\item 
static const char $\ast$ \hyperlink{class_l_t_thresh_88549a567cbcc63337e0485ad3bad305}{DONE} = \char`\"{}thresh done\char`\"{}
\end{CompactItemize}


\subsection{Detailed Description}
Uses the breaking-point discovered with \hyperlink{class_l_t_frequency}{LTFrequency} to create a boolean matrix of true (above the breaking point) or false (not). 

\subsection{Member Function Documentation}
\hypertarget{class_l_t_thresh_b802b240b17b2c71cb758e1fe7585d72}{
\index{LTThresh@{LTThresh}!consumeInput@{consumeInput}}
\index{consumeInput@{consumeInput}!LTThresh@{LTThresh}}
\subsubsection[{consumeInput}]{\setlength{\rightskip}{0pt plus 5cm}void LTThresh::consumeInput ()\hspace{0.3cm}{\tt  \mbox{[}protected, virtual\mbox{]}}}}
\label{class_l_t_thresh_b802b240b17b2c71cb758e1fe7585d72}


The consume input process is spawned once and should distribute tasks to the worker processes. 

Implements \hyperlink{class_tuple_application_e163c5a536de01c8b94b49528a17dab2}{TupleApplication}.\hypertarget{class_l_t_thresh_41ce024f24320a5bd65239e98ac85587}{
\index{LTThresh@{LTThresh}!produceOutput@{produceOutput}}
\index{produceOutput@{produceOutput}!LTThresh@{LTThresh}}
\subsubsection[{produceOutput}]{\setlength{\rightskip}{0pt plus 5cm}void LTThresh::produceOutput ()\hspace{0.3cm}{\tt  \mbox{[}protected, virtual\mbox{]}}}}
\label{class_l_t_thresh_41ce024f24320a5bd65239e98ac85587}


The output producer decides when the tuple application is finished; once this function returns, the tuple application is complete. 

Implements \hyperlink{class_tuple_application_8743dfcf17dedd52887c0b2ab170d8dc}{TupleApplication}.\hypertarget{class_l_t_thresh_3cff6d04c7389a32e1dca924c7f93e23}{
\index{LTThresh@{LTThresh}!work@{work}}
\index{work@{work}!LTThresh@{LTThresh}}
\subsubsection[{work}]{\setlength{\rightskip}{0pt plus 5cm}void LTThresh::work ()\hspace{0.3cm}{\tt  \mbox{[}protected, virtual\mbox{]}}}}
\label{class_l_t_thresh_3cff6d04c7389a32e1dca924c7f93e23}


Worker processes are created and killed after the output process has finished. 

Implements \hyperlink{class_tuple_application_ef6ae8bb1d697e4ed038b43320183c89}{TupleApplication}.

\subsection{Member Data Documentation}
\hypertarget{class_l_t_thresh_88549a567cbcc63337e0485ad3bad305}{
\index{LTThresh@{LTThresh}!DONE@{DONE}}
\index{DONE@{DONE}!LTThresh@{LTThresh}}
\subsubsection[{DONE}]{\setlength{\rightskip}{0pt plus 5cm}const char $\ast$ {\bf LTThresh::DONE} = \char`\"{}thresh done\char`\"{}\hspace{0.3cm}{\tt  \mbox{[}static, protected\mbox{]}}}}
\label{class_l_t_thresh_88549a567cbcc63337e0485ad3bad305}


Flagged when finished. \hypertarget{class_l_t_thresh_f249bcd9d3da75f2fb16e2b38451c0c6}{
\index{LTThresh@{LTThresh}!POINT@{POINT}}
\index{POINT@{POINT}!LTThresh@{LTThresh}}
\subsubsection[{POINT}]{\setlength{\rightskip}{0pt plus 5cm}const char $\ast$ {\bf LTThresh::POINT} = \char`\"{}thresh point\char`\"{}\hspace{0.3cm}{\tt  \mbox{[}static, protected\mbox{]}}}}
\label{class_l_t_thresh_f249bcd9d3da75f2fb16e2b38451c0c6}


The breaking-point for the thresholding process. \hypertarget{class_l_t_thresh_2d17b2a1fe255b7d7beaf65d474ef8c0}{
\index{LTThresh@{LTThresh}!REQUEST@{REQUEST}}
\index{REQUEST@{REQUEST}!LTThresh@{LTThresh}}
\subsubsection[{REQUEST}]{\setlength{\rightskip}{0pt plus 5cm}const char $\ast$ {\bf LTThresh::REQUEST} = \char`\"{}thresh request\char`\"{}\hspace{0.3cm}{\tt  \mbox{[}static, protected\mbox{]}}}}
\label{class_l_t_thresh_2d17b2a1fe255b7d7beaf65d474ef8c0}


A request to compute a row. 

The documentation for this class was generated from the following files:\begin{CompactItemize}
\item 
cowichan\_\-lt/src/\hyperlink{thresh_8hpp}{thresh.hpp}\item 
cowichan\_\-lt/src/\hyperlink{cowichan__lt_2src_2thresh_8cpp}{thresh.cpp}\end{CompactItemize}
