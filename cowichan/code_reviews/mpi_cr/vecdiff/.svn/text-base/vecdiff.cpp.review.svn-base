     1	/**
     2	 * Vector difference
     3	 *
     4	 * \file vecdiff.cpp
     5	 * \author Andrew Borzenko
     6	 * \date 02-27-09
     7	 */
     8	
     9	#include "../include/main.h"
    10	#ifdef IS_PARALLEL
    11	  #include "parallel.h"
    12	#else
    13	  #include "serial.h"
    14	#endif
    15	
    16	int main(int argc, char* argv[])
    17	{
    18	#ifdef IS_PARALLEL
    19	  mpi::environment env(argc, argv);
    20	  mpi::communicator world;
    21	
    22	#ifdef TEST_OUTPUT
    23	  printf ("I am process %d\n", world.rank ());
    24	#endif
    25	#endif
    26	
    27	  real1D*	left;
    28	  real1D*	right;
    29	  real	norm1diff;
    30	  int n;
    31	  int limit;
    32	  int i;
    33	
    34	  n = MAXEXT;
    35	  limit = 10;
    36	
    37	  srand (222);
    38	
    39	  left = new real1D[MAXEXT];
    40	  for (i = 0; i < n; i++)
    41	  {
    42	    left[i] = (real) (rand () % limit);
    43	  }
    44	
    45	  right = new real1D[MAXEXT];
    46	  for (i = 0; i < n; i++)
    47	  {
    48	    right[i] = (real) (rand () % limit);
    49	  }
    50	
    51	#ifdef TEST_OUTPUT
    52	  printf ("left is:\n");
    53	  print_vector (left, n);
    54	
    55	  printf ("right is:\n");
    56	  print_vector (right, n);
    57	#endif
    58	
    59	#ifdef TEST_TIME
    60	  INT64 start, end;
    61	  start = get_ticks ();
    62	#endif
    63	
    64	#ifdef IS_PARALLEL
    65	  vecdiff_mpi (world, left, right, n, &norm1diff);
    66	#else
    67	  vecdiff (left, right, n, &norm1diff);
    68	#endif
    69	
    70	#ifdef TEST_TIME
    71	  end = get_ticks ();
    72	  print_elapsed_time (start, end);
    73	#endif
    74	
    75	#ifdef TEST_OUTPUT
    76	  printf ("norm1 diff is:\n");
    77	  printf ("%lg\n", norm1diff);
    78	#endif
    79	
    80	  delete [] left;
    81	  delete [] right;
    82	
    83	  return 0;
    84	}
